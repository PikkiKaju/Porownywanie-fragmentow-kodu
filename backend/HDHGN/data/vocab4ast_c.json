{
  "types": {
    "ast": 0
  },
  "edge_types": {
    "<pad>": 0,
    "<unk>": 1,
    "type": 2,
    "left": 3,
    "right": 4,
    "name": 5,
    "lvalue": 6,
    "rvalue": 7,
    "subscript": 8,
    "expr": 9,
    "args": 10,
    "cond": 11,
    "init": 12,
    "block_items[0]": 13,
    "exprs[0]": 14,
    "block_items[1]": 15,
    "stmt": 16,
    "exprs[1]": 17,
    "block_items[2]": 18,
    "next": 19,
    "iftrue": 20,
    "block_items[3]": 21,
    "params[0]": 22,
    "decl": 23,
    "body": 24,
    "exprs[2]": 25,
    "params[1]": 26,
    "decls[0]": 27,
    "block_items[4]": 28,
    "field": 29,
    "block_items[5]": 30,
    "ext[0]": 31,
    "ext[1]": 32,
    "ext[2]": 33,
    "ext[3]": 34,
    "ext[4]": 35,
    "ext[5]": 36,
    "ext[6]": 37,
    "ext[7]": 38,
    "ext[8]": 39,
    "ext[9]": 40,
    "ext[10]": 41,
    "ext[11]": 42,
    "ext[12]": 43,
    "ext[13]": 44,
    "ext[14]": 45,
    "ext[15]": 46,
    "ext[16]": 47,
    "ext[17]": 48,
    "ext[18]": 49,
    "ext[19]": 50,
    "ext[20]": 51,
    "ext[21]": 52,
    "ext[22]": 53,
    "ext[23]": 54,
    "ext[24]": 55,
    "ext[25]": 56,
    "ext[26]": 57,
    "ext[27]": 58,
    "ext[28]": 59,
    "ext[29]": 60,
    "ext[30]": 61,
    "ext[31]": 62,
    "ext[32]": 63,
    "ext[33]": 64,
    "ext[34]": 65,
    "ext[35]": 66,
    "ext[36]": 67,
    "ext[37]": 68,
    "ext[38]": 69,
    "ext[39]": 70,
    "ext[40]": 71,
    "ext[41]": 72,
    "ext[42]": 73,
    "ext[43]": 74,
    "ext[44]": 75,
    "ext[45]": 76,
    "ext[46]": 77,
    "ext[47]": 78,
    "ext[48]": 79,
    "ext[49]": 80,
    "ext[50]": 81,
    "ext[51]": 82,
    "ext[52]": 83,
    "ext[53]": 84,
    "ext[54]": 85,
    "ext[55]": 86,
    "ext[56]": 87,
    "ext[57]": 88,
    "ext[58]": 89,
    "ext[59]": 90,
    "ext[60]": 91,
    "ext[61]": 92,
    "ext[62]": 93,
    "ext[63]": 94,
    "ext[64]": 95,
    "ext[65]": 96,
    "ext[66]": 97,
    "ext[67]": 98,
    "ext[68]": 99,
    "ext[69]": 100,
    "ext[70]": 101,
    "ext[71]": 102,
    "ext[72]": 103,
    "ext[73]": 104,
    "ext[74]": 105,
    "ext[75]": 106,
    "ext[76]": 107,
    "ext[77]": 108,
    "ext[78]": 109,
    "ext[79]": 110,
    "ext[80]": 111,
    "ext[81]": 112,
    "ext[82]": 113,
    "ext[83]": 114,
    "ext[84]": 115,
    "ext[85]": 116,
    "ext[86]": 117,
    "ext[87]": 118,
    "ext[88]": 119,
    "ext[89]": 120,
    "ext[90]": 121,
    "ext[91]": 122,
    "ext[92]": 123,
    "ext[93]": 124,
    "ext[94]": 125,
    "ext[95]": 126,
    "ext[96]": 127,
    "ext[97]": 128,
    "ext[98]": 129,
    "ext[99]": 130,
    "ext[100]": 131,
    "ext[101]": 132,
    "ext[102]": 133,
    "ext[103]": 134,
    "ext[104]": 135,
    "ext[105]": 136,
    "ext[106]": 137,
    "ext[107]": 138,
    "ext[108]": 139,
    "ext[109]": 140,
    "ext[110]": 141,
    "ext[111]": 142,
    "ext[112]": 143,
    "ext[113]": 144,
    "ext[114]": 145,
    "ext[115]": 146,
    "ext[116]": 147,
    "ext[117]": 148,
    "ext[118]": 149,
    "ext[119]": 150,
    "ext[120]": 151,
    "ext[121]": 152,
    "ext[122]": 153,
    "ext[123]": 154,
    "ext[124]": 155,
    "ext[125]": 156,
    "ext[126]": 157,
    "ext[127]": 158,
    "ext[128]": 159,
    "ext[129]": 160,
    "ext[130]": 161,
    "ext[131]": 162,
    "ext[132]": 163,
    "ext[133]": 164,
    "ext[134]": 165,
    "ext[135]": 166,
    "ext[136]": 167,
    "ext[137]": 168,
    "ext[138]": 169,
    "ext[139]": 170,
    "ext[140]": 171,
    "ext[141]": 172,
    "ext[142]": 173,
    "ext[143]": 174,
    "ext[144]": 175,
    "ext[145]": 176,
    "ext[146]": 177,
    "ext[147]": 178,
    "ext[148]": 179,
    "ext[149]": 180,
    "ext[150]": 181,
    "ext[151]": 182,
    "ext[152]": 183,
    "ext[153]": 184,
    "ext[154]": 185,
    "ext[155]": 186,
    "ext[156]": 187,
    "ext[157]": 188,
    "ext[158]": 189,
    "ext[159]": 190,
    "ext[160]": 191,
    "ext[161]": 192,
    "ext[162]": 193,
    "ext[163]": 194,
    "ext[164]": 195,
    "ext[165]": 196,
    "ext[166]": 197,
    "ext[167]": 198,
    "ext[168]": 199,
    "ext[169]": 200,
    "ext[170]": 201,
    "ext[171]": 202,
    "ext[172]": 203,
    "ext[173]": 204,
    "ext[174]": 205,
    "ext[175]": 206,
    "ext[176]": 207,
    "ext[177]": 208,
    "ext[178]": 209,
    "ext[179]": 210,
    "ext[180]": 211,
    "ext[181]": 212,
    "ext[182]": 213,
    "ext[183]": 214,
    "ext[184]": 215,
    "ext[185]": 216,
    "ext[186]": 217,
    "ext[187]": 218,
    "ext[188]": 219,
    "ext[189]": 220,
    "ext[190]": 221,
    "ext[191]": 222,
    "ext[192]": 223,
    "ext[193]": 224,
    "ext[194]": 225,
    "values": 226,
    "enumerators[0]": 227,
    "enumerators[1]": 228,
    "enumerators[2]": 229,
    "enumerators[3]": 230,
    "enumerators[4]": 231,
    "enumerators[5]": 232,
    "ext[195]": 233,
    "exprs[3]": 234,
    "params[2]": 235,
    "iffalse": 236,
    "block_items[6]": 237,
    "ext[196]": 238,
    "dim": 239,
    "block_items[7]": 240,
    "block_items[8]": 241,
    "ext[197]": 242,
    "block_items[9]": 243,
    "params[3]": 244,
    "block_items[10]": 245,
    "block_items[11]": 246,
    "to_type": 247,
    "exprs[4]": 248,
    "decls[1]": 249,
    "block_items[12]": 250,
    "block_items[13]": 251,
    "block_items[14]": 252,
    "params[4]": 253,
    "block_items[15]": 254,
    "decls[2]": 255,
    "ext[198]": 256,
    "ext[199]": 257,
    "ext[200]": 258,
    "exprs[5]": 259,
    "exprs[6]": 260,
    "exprs[7]": 261,
    "exprs[8]": 262,
    "exprs[9]": 263,
    "block_items[16]": 264,
    "block_items[17]": 265
  },
  "labels": {
    "noise": 0,
    "selectionsort": 1,
    "quicksort1": 2,
    "binomial": 3,
    "nth_root": 4,
    "brent": 5,
    "circlesort": 6,
    "matrix_det": 7,
    "gjinv": 8,
    "matrix_transposition": 9,
    "mergesort": 10,
    "quicksort2": 11,
    "combsort": 12,
    "ceasar": 13,
    "floydWarshall": 14,
    "heapsort": 15,
    "evolutionary": 16,
    "insertionsort": 17,
    "bubblesort": 18,
    "gauss_eliminate": 19,
    "bogosort": 20,
    "lcs": 21,
    "scs": 22,
    "cocktailsort": 23
  },
  "ast": {
    "<pad>": 0,
    "<unk>": 1,
    "<class 'pycparser.c_ast.TypeDecl'>": 2,
    "<class 'pycparser.c_ast.IdentifierType'>": 3,
    "<class 'pycparser.c_ast.Typedef'>": 4,
    "<class 'pycparser.c_ast.ID'>": 5,
    "<class 'pycparser.c_ast.BinaryOp'>": 6,
    "<class 'pycparser.c_ast.Decl'>": 7,
    "<class 'pycparser.c_ast.Constant'>": 8,
    "<class 'pycparser.c_ast.Assignment'>": 9,
    "<class 'pycparser.c_ast.ArrayRef'>": 10,
    "<class 'pycparser.c_ast.Struct'>": 11,
    "<class 'pycparser.c_ast.UnaryOp'>": 12,
    "<class 'pycparser.c_ast.Compound'>": 13,
    "<class 'pycparser.c_ast.PtrDecl'>": 14,
    "<class 'pycparser.c_ast.Enumerator'>": 15,
    "<class 'pycparser.c_ast.ExprList'>": 16,
    "<class 'pycparser.c_ast.FuncCall'>": 17,
    "<class 'pycparser.c_ast.For'>": 18,
    "<class 'pycparser.c_ast.If'>": 19,
    "<class 'pycparser.c_ast.FuncDecl'>": 20,
    "<class 'pycparser.c_ast.ParamList'>": 21,
    "<class 'pycparser.c_ast.FuncDef'>": 22,
    "<class 'pycparser.c_ast.Return'>": 23,
    "<class 'pycparser.c_ast.StructRef'>": 24,
    "<class 'pycparser.c_ast.FileAST'>": 25,
    "<class 'pycparser.c_ast.Enum'>": 26,
    "<class 'pycparser.c_ast.EnumeratorList'>": 27,
    "<class 'pycparser.c_ast.ArrayDecl'>": 28,
    "<class 'pycparser.c_ast.While'>": 29,
    "<class 'pycparser.c_ast.Typename'>": 30,
    "<class 'pycparser.c_ast.TernaryOp'>": 31,
    "<class 'pycparser.c_ast.DeclList'>": 32,
    "<class 'pycparser.c_ast.DoWhile'>": 33,
    "<class 'pycparser.c_ast.InitList'>": 34,
    "<class 'pycparser.c_ast.Cast'>": 35,
    "<class 'pycparser.c_ast.Break'>": 36,
    "<class 'pycparser.c_ast.Continue'>": 37,
    "<class 'pycparser.c_ast.CompoundLiteral'>": 38,
    "<class 'pycparser.c_ast.EmptyStatement'>": 39
  }
}